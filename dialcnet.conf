[macro-dialcnet]
; Collectors' Network - Based on a version written by Chad Perkins
; With some features taken from a version written by Tele706 (Brian)
; And a few bits and bobs added by Paul Seward (http://dfrvoip.org.uk)

exten => s,1,Set(E164NETWORKS=std.ckts.info)
exten => s,n,NoOp(dialcnet macro - attempting to call ${ARG1})

; Filter ARG1 incase there's anything unexpected in there
exten => s,n,Set(ARG1=${FILTER(0123456789abcdABCD#*+,${ARG1})})

; Check to see if ARG1 is preceded by a "+"
exten => s,n,GotoIf($["${ARG1:0:1}"="+"]?doenum)

; Add a + to the beginning of ARG1 as if we're here, it's missing
exten => s,n,Set(ARG1=+${ARG1})

; Do the ENUM lookup
exten => s,n(doenum),Set(ENUM=${ENUMLOOKUP(${ARG1},ALL,,1,std.ckts.info)})

; Sanity check the return, make sure there's something in there.
; If not, send it to UNROUTABLE.
exten => s,n,GotoIf($[${LEN(${ENUM})} = 0 ]?unroutable)

; If the return includes the word SIP, go to SIPURI
exten => s,n,GotoIf($[${ENUM:0:3} = sip ]?sipuri)

; Otherwise, if the return includes the word IAX, go to IAXURI
exten => s,n,GotoIf($[${ENUM:0:3} = iax ]?iaxuri)

; And, if the return includes the word H323, send it to H323URI
exten => s,n,GotoIf($[${ENUM:0:3} = h32 ]?h323uri)

; If we're here, it's not a protocol we know about.
; This is also used as the generic CANT BE ROUTED spot
exten => s,n(unroutable),Macro(DC-INVALID,${ARG1:1})
exten => s,n,Wait(5)
exten => s,n,Hangup

; If the prefix is 'sip:'...
exten => s,n(sipuri),Set(DIALSTR=SIP/${ENUM:4})
exten => s,n,Goto(dodial)

; If it's IAX2...
exten => s,n(iaxuri),Set(DIALSTR=IAX2/${ENUM:5})
exten => s,n,Goto(dodial)

; Or even if it's H323.
exten => s,n(h323uri),Set(DIALSTR=H323/${ENUM:5})
exten => s,n,Goto(dodial)

; And this is where we end up if we actually CAN route the call.
exten => s,n(dodial),NoOp(CallerID: ${CALLERID(all)})
exten => s,n,Dial(${DIALSTR})
exten => s,n,NoOp(Dial Status: ${DIALSTATUS})
exten => s,n,DumpChan(4)
exten => s,n,Macro(DC-${DIALSTATUS})
exten => s,n,Hangup
exten => s,999,Macro(DC-CONGESTION)

[macro-DC-BUSY]
exten => s,1,Busy()
exten => s,n,Hangup()

[macro-DC-CONGESTION]
exten => s,1,Congestion()
exten => s,n,Hangup()

[macro-DC-CHANUNAVAIL]
exten => s,1,Congestion()
exten => s,n,Hangup()

[macro-DC-NOANSWER]
exten => s,1,Busy()
exten => s,n,Hangup()

[macro-DC-INVALID]
exten => s,1,Congestion()
exten => s,n,Hangup()

